package Vista;

import controlador.GestionCliente;
import controlador.GestionEmpleado;
import controlador.GestionFactura;
import controlador.GestionProducto;
import controlador.Pool;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;
import modelo.Cliente;
import modelo.Producto;

/**
 *
 * @author lucas
 */
public class Practica_App extends javax.swing.JFrame {
    DefaultComboBoxModel<Cliente> cmbBoxModelC = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<Producto> cmbBoxModelP = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<Cliente> cmbBoxModelConsulta = new DefaultComboBoxModel<>();
    private DefaultTableModel model_Productos = new DefaultTableModel();
    private DefaultTableModel model_ProductosFacturar = new DefaultTableModel();
    private DefaultTableModel model_FactCliente = new DefaultTableModel();
    private DefaultTableModel model_Consulta = new DefaultTableModel();
    
    public Practica_App() {
        try {
            Pool.IniciaPool();
            initComponents();
            //Cargar combos
            cmbCliente.setModel(cmbBoxModelC);
            cmbProductoFact.setModel(cmbBoxModelP);
            cmbClienteConsulta.setModel(cmbBoxModelConsulta);
            GestionProducto.cargarCombo(cmbProductoFact);
            GestionCliente.cargarCombo(cmbCliente);
            GestionCliente.cargarCombo(cmbClienteConsulta);
            cmbClienteConsulta.setVisible(false);
            
            //Declaración y carga de tablas modelo:
            model_Productos = (DefaultTableModel) tbl_Productos.getModel();
            model_Productos.setRowCount(0);
            GestionProducto.cargarTablaProducto(model_Productos);
            model_ProductosFacturar = (DefaultTableModel) tblFacturacionProd.getModel();
            model_ProductosFacturar.setRowCount(0);        
            model_FactCliente = (DefaultTableModel) tblFact_Cliente.getModel();
            model_FactCliente.setRowCount(0);
            model_Consulta = (DefaultTableModel) tblConsulta.getModel();
            model_Productos.setRowCount(0);
            GestionProducto.cargarTablaProducto(model_Productos);
            
            //Longitud máxima de cuadros de texto:
            txtIdCliente.setDocument(new LimiteLongitudJTextField(10));
            txtAñadir_IDProd.setDocument(new LimiteLongitudJTextField(6));
            txtAñadir_NombProd.setDocument(new LimiteLongitudJTextField(25));
            txtCategoriaP.setDocument(new LimiteLongitudJTextField(10));
            nuevo_idcliente.setDocument(new LimiteLongitudJTextField(10));
            nuevo_nombre.setDocument(new LimiteLongitudJTextField(20));
            nuevo_apellido.setDocument(new LimiteLongitudJTextField(25));
            nuevo_direccion.setDocument(new LimiteLongitudJTextField(30));
            
        } catch (SQLException ex) {
            Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex);
        } finally{
            Pool.Cerrar();
        }
        
    }
    private boolean isNumero(KeyEvent evt) {
        // Comprobar si la pulsacion de teclado pasada
        // en evt es un número
        char caracter = evt.getKeyChar();
        return !(((caracter < '0' || caracter > '9')
                && (caracter != KeyEvent.VK_BACK_SPACE))
                || (evt.isAltDown()
                || evt.isAltGraphDown()
                || evt.isControlDown()
                || evt.isMetaDown()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Crear_Cliente = new javax.swing.JDialog();
        lblExisteCliente = new javax.swing.JLabel();
        btnSi = new javax.swing.JButton();
        btnNo = new javax.swing.JButton();
        Nuevo_Cliente = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nuevo_idcliente = new javax.swing.JTextField();
        nuevo_nombre = new javax.swing.JTextField();
        nuevo_apellido = new javax.swing.JTextField();
        nuevo_direccion = new javax.swing.JTextField();
        btncrearcli = new javax.swing.JButton();
        btncancelarcli = new javax.swing.JButton();
        menu = new javax.swing.JTabbedPane();
        panelFacturar = new javax.swing.JPanel();
        lblNFactura = new javax.swing.JLabel();
        lbl_IDClienteFact = new javax.swing.JLabel();
        txtN_Factura = new javax.swing.JTextField();
        txtIdCliente = new javax.swing.JTextField();
        lbl_IVAFact = new javax.swing.JLabel();
        lbl_IDEmpleadoFact = new javax.swing.JLabel();
        txtEmpleado = new javax.swing.JTextField();
        lblCobradaFact = new javax.swing.JLabel();
        chbCobrada = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFacturacionProd = new javax.swing.JTable();
        lblTotalFact = new javax.swing.JLabel();
        btnFacturar = new javax.swing.JButton();
        lblProductoFact = new javax.swing.JLabel();
        cmbProductoFact = new javax.swing.JComboBox<>();
        btnAñadirProdFact = new javax.swing.JButton();
        btnBorrarProdFact = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lbl_Total = new javax.swing.JLabel();
        lbl_StockFact = new javax.swing.JLabel();
        txtStockFact = new javax.swing.JTextField();
        cmb_IVA_Fact = new javax.swing.JComboBox<>();
        panelProductos = new javax.swing.JPanel();
        lbl_IDProd = new javax.swing.JLabel();
        txtAñadir_IDProd = new javax.swing.JTextField();
        txtAñadir_NombProd = new javax.swing.JTextField();
        lblNombreProd = new javax.swing.JLabel();
        lblStockProd = new javax.swing.JLabel();
        txt_AñadirStock = new javax.swing.JTextField();
        lblPrecioProd = new javax.swing.JLabel();
        txt_AñadirPrecio = new javax.swing.JTextField();
        lblCategoriaProd = new javax.swing.JLabel();
        lbl_IVAProd = new javax.swing.JLabel();
        btnAñadir = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_Productos = new javax.swing.JTable();
        btnModificarProd = new javax.swing.JButton();
        txtCategoriaP = new javax.swing.JTextField();
        cmb_IVAProd = new javax.swing.JComboBox<>();
        btnBorrarProd = new javax.swing.JButton();
        btnRestablecerTBLProd = new javax.swing.JButton();
        panelFacturas = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbCliente = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFact_Cliente = new javax.swing.JTable();
        btn_EstadoCobro = new javax.swing.JButton();
        lbl_BorrarClientes = new javax.swing.JLabel();
        lbl_IDBorrarCliente = new javax.swing.JLabel();
        txt_BorrarID_Cliente = new javax.swing.JTextField();
        btn_BorrarCliente = new javax.swing.JButton();
        panelConsultas = new javax.swing.JPanel();
        lblConsulta30 = new javax.swing.JLabel();
        btnConsulta30 = new javax.swing.JButton();
        txtFacturado30Consulta = new javax.swing.JTextField();
        lblFactConsulta = new javax.swing.JLabel();
        lblNFactConsulta = new javax.swing.JLabel();
        txtNumFactConsulta = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblConsulta = new javax.swing.JTable();
        lblFiltro = new javax.swing.JLabel();
        btnFiltroCliente = new javax.swing.JButton();
        cmbClienteConsulta = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        Crear_Cliente.setLocation(new java.awt.Point(300, 200));
        Crear_Cliente.setMinimumSize(new java.awt.Dimension(400, 200));
        Crear_Cliente.setResizable(false);

        lblExisteCliente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblExisteCliente.setText("El cliente no existe, deseas crearlo?");

        btnSi.setText("Si");
        btnSi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiActionPerformed(evt);
            }
        });

        btnNo.setText("No");
        btnNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Crear_ClienteLayout = new javax.swing.GroupLayout(Crear_Cliente.getContentPane());
        Crear_Cliente.getContentPane().setLayout(Crear_ClienteLayout);
        Crear_ClienteLayout.setHorizontalGroup(
            Crear_ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Crear_ClienteLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(Crear_ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(Crear_ClienteLayout.createSequentialGroup()
                        .addComponent(btnSi, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblExisteCliente))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        Crear_ClienteLayout.setVerticalGroup(
            Crear_ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Crear_ClienteLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(lblExisteCliente)
                .addGap(42, 42, 42)
                .addGroup(Crear_ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSi)
                    .addComponent(btnNo))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        Nuevo_Cliente.setLocation(new java.awt.Point(300, 200));
        Nuevo_Cliente.setMinimumSize(new java.awt.Dimension(500, 230));
        Nuevo_Cliente.setResizable(false);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("ID Cliente:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Nombre:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Apellido:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Dirección:");

        nuevo_idcliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nuevo_idclienteFocusLost(evt);
            }
        });

        btncrearcli.setText("Crear cliente");
        btncrearcli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncrearcliActionPerformed(evt);
            }
        });

        btncancelarcli.setText("Cancelar");
        btncancelarcli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelarcliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Nuevo_ClienteLayout = new javax.swing.GroupLayout(Nuevo_Cliente.getContentPane());
        Nuevo_Cliente.getContentPane().setLayout(Nuevo_ClienteLayout);
        Nuevo_ClienteLayout.setHorizontalGroup(
            Nuevo_ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Nuevo_ClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Nuevo_ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Nuevo_ClienteLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Nuevo_ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Nuevo_ClienteLayout.createSequentialGroup()
                                .addComponent(nuevo_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 77, Short.MAX_VALUE))
                            .addGroup(Nuevo_ClienteLayout.createSequentialGroup()
                                .addComponent(btncrearcli, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btncancelarcli, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(102, 102, 102))
                    .addGroup(Nuevo_ClienteLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nuevo_idcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nuevo_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nuevo_apellido)
                        .addContainerGap())))
        );
        Nuevo_ClienteLayout.setVerticalGroup(
            Nuevo_ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Nuevo_ClienteLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(Nuevo_ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(nuevo_idcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nuevo_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nuevo_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(Nuevo_ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(nuevo_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(Nuevo_ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btncrearcli)
                    .addComponent(btncancelarcli))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblNFactura.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNFactura.setText("Nº Factura:");

        lbl_IDClienteFact.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_IDClienteFact.setText("ID Cliente:");

        txtN_Factura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtN_FacturaFocusLost(evt);
            }
        });

        txtIdCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdClienteFocusLost(evt);
            }
        });

        lbl_IVAFact.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_IVAFact.setText("IVA:");

        lbl_IDEmpleadoFact.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_IDEmpleadoFact.setText("ID Empleado:");

        txtEmpleado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmpleadoFocusLost(evt);
            }
        });

        lblCobradaFact.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCobradaFact.setText("Cobrada:");

        chbCobrada.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        tblFacturacionProd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Producto", "Cantidad", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFacturacionProd);

        lblTotalFact.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTotalFact.setText("Total (Iva incluido):");

        btnFacturar.setText("Facturar");
        btnFacturar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFacturarActionPerformed(evt);
            }
        });

        lblProductoFact.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblProductoFact.setText("Producto:");

        btnAñadirProdFact.setText("Añadir producto");
        btnAñadirProdFact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirProdFactActionPerformed(evt);
            }
        });

        btnBorrarProdFact.setText("Borrar seleccionado");
        btnBorrarProdFact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarProdFactActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbl_Total.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbl_Total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Total.setText("0€");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_Total, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(lbl_Total, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbl_StockFact.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_StockFact.setText("Stock:");

        txtStockFact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStockFactKeyTyped(evt);
            }
        });

        cmb_IVA_Fact.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "21", "10", "4" }));
        cmb_IVA_Fact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_IVA_FactActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFacturarLayout = new javax.swing.GroupLayout(panelFacturar);
        panelFacturar.setLayout(panelFacturarLayout);
        panelFacturarLayout.setHorizontalGroup(
            panelFacturarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFacturarLayout.createSequentialGroup()
                .addGroup(panelFacturarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelFacturarLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTotalFact)
                        .addGap(8, 8, 8)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(btnFacturar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelFacturarLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(panelFacturarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(panelFacturarLayout.createSequentialGroup()
                                .addGroup(panelFacturarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblProductoFact, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblNFactura, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_IDClienteFact, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelFacturarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtN_Factura)
                                    .addComponent(txtIdCliente)
                                    .addComponent(cmbProductoFact, 0, 129, Short.MAX_VALUE))
                                .addGroup(panelFacturarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelFacturarLayout.createSequentialGroup()
                                        .addGap(54, 54, 54)
                                        .addGroup(panelFacturarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelFacturarLayout.createSequentialGroup()
                                                .addComponent(lblCobradaFact, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, 0)
                                                .addComponent(chbCobrada, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(179, 179, 179))
                                            .addGroup(panelFacturarLayout.createSequentialGroup()
                                                .addComponent(lbl_IDEmpleadoFact, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtEmpleado, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(lbl_IVAFact, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cmb_IVA_Fact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(19, 19, 19))))
                                    .addGroup(panelFacturarLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(lbl_StockFact)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtStockFact, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnAñadirProdFact, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(21, 21, 21)
                                        .addComponent(btnBorrarProdFact, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)))))))
                .addGap(64, 64, 64))
        );
        panelFacturarLayout.setVerticalGroup(
            panelFacturarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFacturarLayout.createSequentialGroup()
                .addGroup(panelFacturarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFacturarLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(panelFacturarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNFactura)
                            .addComponent(txtN_Factura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFacturarLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelFacturarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_IDEmpleadoFact)
                            .addComponent(txtEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_IVAFact)
                            .addComponent(cmb_IVA_Fact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addGroup(panelFacturarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbCobrada, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelFacturarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_IDClienteFact)
                        .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblCobradaFact)))
                .addGroup(panelFacturarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFacturarLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(panelFacturarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProductoFact)
                            .addComponent(cmbProductoFact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBorrarProdFact)
                            .addComponent(lbl_StockFact)
                            .addComponent(txtStockFact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAñadirProdFact))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                        .addGap(22, 22, 22)
                        .addGroup(panelFacturarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnFacturar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelFacturarLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTotalFact, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
        );

        menu.addTab("Facturar", panelFacturar);

        lbl_IDProd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_IDProd.setText("ID Producto:");

        lblNombreProd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNombreProd.setText("Nombre:");

        lblStockProd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblStockProd.setText("Stock:");

        txt_AñadirStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_AñadirStockKeyTyped(evt);
            }
        });

        lblPrecioProd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPrecioProd.setText("Precio:");

        txt_AñadirPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_AñadirPrecioKeyTyped(evt);
            }
        });

        lblCategoriaProd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCategoriaProd.setText("Categoría:");

        lbl_IVAProd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_IVAProd.setText("IVA:");

        btnAñadir.setText("Insertar");
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });

        tbl_Productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID_Producto", "Nombre", "Stock", "Precio", "Categoria", "IVA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbl_Productos);

        btnModificarProd.setText("Confirmar modificaciones");
        btnModificarProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarProdActionPerformed(evt);
            }
        });

        cmb_IVAProd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "21", "10", "4" }));

        btnBorrarProd.setText("Borrar seleccionado");
        btnBorrarProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarProdActionPerformed(evt);
            }
        });

        btnRestablecerTBLProd.setText("Restablecer tabla");
        btnRestablecerTBLProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestablecerTBLProdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelProductosLayout = new javax.swing.GroupLayout(panelProductos);
        panelProductos.setLayout(panelProductosLayout);
        panelProductosLayout.setHorizontalGroup(
            panelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProductosLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(panelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelProductosLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(panelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelProductosLayout.createSequentialGroup()
                                .addComponent(btnBorrarProd, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRestablecerTBLProd, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnModificarProd, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelProductosLayout.createSequentialGroup()
                                .addComponent(lblPrecioProd, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_AñadirPrecio, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                                .addGap(27, 27, 27)
                                .addComponent(lblCategoriaProd, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCategoriaP, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(lbl_IVAProd, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(150, 150, 150)
                                .addComponent(btnAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)))
                        .addGap(25, 25, 25))
                    .addGroup(panelProductosLayout.createSequentialGroup()
                        .addComponent(lbl_IDProd, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAñadir_IDProd)
                        .addGap(18, 18, 18)
                        .addComponent(lblNombreProd, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAñadir_NombProd)
                        .addGap(18, 18, 18)
                        .addGroup(panelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelProductosLayout.createSequentialGroup()
                                .addComponent(cmb_IVAProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panelProductosLayout.createSequentialGroup()
                                .addComponent(lblStockProd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_AñadirStock)
                                .addGap(171, 171, 171))))))
        );
        panelProductosLayout.setVerticalGroup(
            panelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProductosLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_IDProd)
                    .addComponent(txtAñadir_IDProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAñadir_NombProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNombreProd)
                    .addComponent(lblStockProd)
                    .addComponent(txt_AñadirStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(panelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrecioProd)
                    .addComponent(txt_AñadirPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCategoriaProd)
                    .addComponent(lbl_IVAProd)
                    .addComponent(btnAñadir)
                    .addComponent(txtCategoriaP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_IVAProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificarProd)
                    .addComponent(btnBorrarProd)
                    .addComponent(btnRestablecerTBLProd))
                .addGap(37, 37, 37))
        );

        menu.addTab("Productos", panelProductos);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("ID Cliente:");

        cmbCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClienteActionPerformed(evt);
            }
        });

        tblFact_Cliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Num_Factura", "Nombre", "Apellido", "Fecha", "Importe", "Estado de cobro"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblFact_Cliente);

        btn_EstadoCobro.setText("Establecer cobrada");
        btn_EstadoCobro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EstadoCobroActionPerformed(evt);
            }
        });

        lbl_BorrarClientes.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_BorrarClientes.setText("Borrar Clientes:");

        lbl_IDBorrarCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_IDBorrarCliente.setText("ID Cliente:");

        btn_BorrarCliente.setText("Borrar");
        btn_BorrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BorrarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFacturasLayout = new javax.swing.GroupLayout(panelFacturas);
        panelFacturas.setLayout(panelFacturasLayout);
        panelFacturasLayout.setHorizontalGroup(
            panelFacturasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFacturasLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(panelFacturasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFacturasLayout.createSequentialGroup()
                        .addGroup(panelFacturasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFacturasLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 300, Short.MAX_VALUE)
                                .addComponent(btn_EstadoCobro, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2))
                        .addGap(46, 46, 46))
                    .addGroup(panelFacturasLayout.createSequentialGroup()
                        .addGroup(panelFacturasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_BorrarClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelFacturasLayout.createSequentialGroup()
                                .addComponent(lbl_IDBorrarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_BorrarID_Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_BorrarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        panelFacturasLayout.setVerticalGroup(
            panelFacturasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFacturasLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(panelFacturasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_EstadoCobro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_BorrarClientes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFacturasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_IDBorrarCliente)
                    .addComponent(txt_BorrarID_Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_BorrarCliente))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        menu.addTab("Clientes", panelFacturas);

        lblConsulta30.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblConsulta30.setText("Calcular total facturado en los últimos 30 días:");

        btnConsulta30.setText("Calcular");
        btnConsulta30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsulta30ActionPerformed(evt);
            }
        });

        txtFacturado30Consulta.setEditable(false);
        txtFacturado30Consulta.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtFacturado30Consulta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFacturado30Consulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFacturado30ConsultaActionPerformed(evt);
            }
        });

        lblFactConsulta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblFactConsulta.setText("Lista de facturas pendientes de cobro:");

        lblNFactConsulta.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNFactConsulta.setText("Número de facturas pendientes:");

        txtNumFactConsulta.setEditable(false);
        txtNumFactConsulta.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tblConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nº Factura", "ID Cliente", "Nombre", "ID Empleado", "Fecha", "Iva", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblConsulta);

        lblFiltro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblFiltro.setText("Filtrar por cliente:");

        btnFiltroCliente.setText("Filtrar/Dejar de filtrar");
        btnFiltroCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltroClienteActionPerformed(evt);
            }
        });

        cmbClienteConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClienteConsultaActionPerformed(evt);
            }
        });

        jButton1.setText("Actualizar");

        javax.swing.GroupLayout panelConsultasLayout = new javax.swing.GroupLayout(panelConsultas);
        panelConsultas.setLayout(panelConsultasLayout);
        panelConsultasLayout.setHorizontalGroup(
            panelConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConsultasLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(panelConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelConsultasLayout.createSequentialGroup()
                        .addComponent(lblConsulta30, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConsulta30, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtFacturado30Consulta, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelConsultasLayout.createSequentialGroup()
                            .addGroup(panelConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(panelConsultasLayout.createSequentialGroup()
                                    .addComponent(lblFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnFiltroCliente))
                                .addGroup(panelConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblFactConsulta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelConsultasLayout.createSequentialGroup()
                                        .addComponent(lblNFactConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNumFactConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(30, 30, 30)
                            .addComponent(cmbClienteConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        panelConsultasLayout.setVerticalGroup(
            panelConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConsultasLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(panelConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblConsulta30)
                    .addComponent(btnConsulta30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFacturado30Consulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblFactConsulta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNFactConsulta)
                    .addComponent(txtNumFactConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFiltro)
                    .addComponent(btnFiltroCliente)
                    .addComponent(cmbClienteConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        menu.addTab("Consultas", panelConsultas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menu)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menu)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_EstadoCobroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EstadoCobroActionPerformed
        try{
            if((boolean)model_FactCliente.getValueAt(tblFact_Cliente.getSelectedRow(), 5) == false){
                model_FactCliente.setValueAt(true, tblFact_Cliente.getSelectedRow(), 5);
                GestionFactura.ActualizarCobro((String)model_FactCliente.getValueAt(tblFact_Cliente.getSelectedRow(), 0));
                Pool.getCurrentConexion().commit();
            }
            else{
                JOptionPane.showMessageDialog(this, "La factura ya está cobrada");
            }
        }
        catch(Exception e){
            try {
                JOptionPane.showMessageDialog(this, "Selecciona una fila para confirmar cobro");
                Pool.getCurrentConexion().rollback();
            } catch (SQLException ex) {
                Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex);
            }
        } finally{
            Pool.Cerrar();
        }
    }//GEN-LAST:event_btn_EstadoCobroActionPerformed

    private void cmbClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClienteActionPerformed
        try {
            GestionCliente.CargarFilaFacturaCliente(model_FactCliente, cmbCliente.getSelectedItem().toString());
        } catch (SQLException ex) {
            Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex);
        } finally{
            Pool.Cerrar();
        }
    }//GEN-LAST:event_cmbClienteActionPerformed

    private void btnRestablecerTBLProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestablecerTBLProdActionPerformed
        try {
            model_Productos.setRowCount(0);
            GestionProducto.cargarTablaProducto(model_Productos);
        } catch (SQLException ex) {
            try {
                Pool.getCurrentConexion().rollback();
                Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex1) {
                Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex1);
            }
        } finally{
            Pool.Cerrar();
        }
    }//GEN-LAST:event_btnRestablecerTBLProdActionPerformed

    private void btnBorrarProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarProdActionPerformed
        if(model_Productos.getRowCount()>0){
            try{
                if(GestionProducto.ComprobacionProducto((String)model_Productos.getValueAt(tbl_Productos.getSelectedRow(), 0)) == true){
                    JOptionPane.showMessageDialog(this, "El Producto no puede ser borrado debido a que pertenece a una factura");
                }
                else{
                    GestionProducto.BorrarProductoBD(model_Productos, tbl_Productos.getSelectedRow());
                    model_Productos.removeRow(tbl_Productos.getSelectedRow());
                    Pool.getCurrentConexion().commit();
                    JOptionPane.showMessageDialog(this, "Producto borrado satisfactoriamente");
                    //Refresca el combo de productos en factura
                    GestionProducto.cargarCombo(cmbProductoFact);
                    model_ProductosFacturar.setRowCount(0);
                }
            }
            catch(Exception e){
                try {
                    JOptionPane.showMessageDialog(this, "Selecciona una tabla para borrar ");
                    Pool.getCurrentConexion().rollback();
                    Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, e);
                } catch (SQLException ex) {
                    Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex);
                }
            } finally{
                Pool.Cerrar();
            }
        }
    }//GEN-LAST:event_btnBorrarProdActionPerformed

    private void btnModificarProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarProdActionPerformed
        try {
            GestionProducto.ModificarTablaProductos(model_Productos);
            Pool.getCurrentConexion().commit();
            JOptionPane.showMessageDialog(this, "Productos modificados satisfactoriamente");
            //Refresca el combo de productos en factura
            GestionProducto.cargarCombo(cmbProductoFact);
            model_ProductosFacturar.setRowCount(0);
        } catch (SQLException ex) {
            try {
                JOptionPane.showMessageDialog(this, "Error en la modificación de los datos");
                Pool.getCurrentConexion().rollback();
                Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex1) {
                Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex1);
            }
        } finally{
            Pool.Cerrar();
        }
    }//GEN-LAST:event_btnModificarProdActionPerformed

    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirActionPerformed
        if(!txtAñadir_IDProd.getText().isEmpty() && !txtAñadir_NombProd.getText().isEmpty() && !txt_AñadirStock.getText().isEmpty() 
                && !txt_AñadirPrecio.getText().isEmpty() && !txtCategoriaP.getText().isEmpty()) {
                Boolean existe = false;
                //Comprobación de si el producto a añadir tiene id y nombre únicos:
                for(int i=0;i<model_Productos.getRowCount();i++){
                    if(txtAñadir_IDProd.getText().trim().equals(model_Productos.getValueAt(i, 0)) || txtAñadir_NombProd.getText().trim().equals(model_Productos.getValueAt(i, 1))){
                        existe = true;
                    }
                }
                if(existe == true){
                    JOptionPane.showMessageDialog(this, "El ID/Nombre del producto ya existen");
                }
                else{
                    try {
                        GestionProducto.CargarFilaProducto(model_Productos, txtAñadir_IDProd.getText().trim(), txtAñadir_NombProd.getText().trim(),
                            Integer.parseInt(txt_AñadirStock.getText().trim()), Float.parseFloat(txt_AñadirPrecio.getText().trim()),
                            txtCategoriaP.getText().trim(), Float.parseFloat(cmb_IVAProd.getSelectedItem().toString()));
                        GestionProducto.InsertarProductoBD(model_Productos);
                        Pool.getCurrentConexion().commit();                        
                        JOptionPane.showMessageDialog(this, "Producto añadido satisfactoriamente");
                        txtAñadir_IDProd.setText("");txtAñadir_NombProd.setText("");txt_AñadirPrecio.setText("");txt_AñadirStock.setText("");txtCategoriaP.setText("");
                        //Refresca el combo de productos en factura
                        GestionProducto.cargarCombo(cmbProductoFact);
                        model_ProductosFacturar.setRowCount(0);
                    } catch (SQLException ex) {
                        try {
                            Pool.getCurrentConexion().rollback();
                            Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (SQLException ex1) {
                            Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex1);
                        }
                    } finally{
                        Pool.Cerrar();
                    }
                }

            
        }
        else{
            JOptionPane.showMessageDialog(this, "Por favor rellene todos los campos");
        }
    }//GEN-LAST:event_btnAñadirActionPerformed

    private void txt_AñadirPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_AñadirPrecioKeyTyped
        if (!isNumero(evt)) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_AñadirPrecioKeyTyped

    private void txt_AñadirStockKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_AñadirStockKeyTyped
        if (!isNumero(evt)) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_AñadirStockKeyTyped

    private void txtStockFactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStockFactKeyTyped
        if (!isNumero(evt)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtStockFactKeyTyped

    private void btnBorrarProdFactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarProdFactActionPerformed

        if(model_ProductosFacturar.getRowCount()>0 ){
            try{
                float precioB = (float) model_ProductosFacturar.getValueAt(tblFacturacionProd.getSelectedRow(), 2);
                float total = Float.parseFloat(lbl_Total.getText().trim().replace(',', '.').substring(0, lbl_Total.getText().trim().length()-1))-precioB;
                lbl_Total.setText(String.format("%.2f", total)+"€");
                //p.setStock_Producto(getStockProducto(p)-stock)
                for(int i=0;i<model_ProductosFacturar.getRowCount();i++){
                    if(model_ProductosFacturar.getValueAt(tblFacturacionProd.getSelectedRow(), 0).equals(cmbProductoFact.getItemAt(i).toString()));
                        Producto p =(Producto)(cmbProductoFact.getItemAt(i));
                        p.setStock_Producto((p.getStock_Producto()+Integer.parseInt(model_ProductosFacturar.getValueAt(tblFacturacionProd.getSelectedRow(), 1).toString())));
                }
                model_ProductosFacturar.removeRow(tblFacturacionProd.getSelectedRow());
                if(model_ProductosFacturar.getRowCount()<=0){
                    lbl_Total.setText(0+"€");
                    txtIdCliente.setEditable(true);txtEmpleado.setEditable(true);txtN_Factura.setEditable(true);chbCobrada.setEnabled(true);cmb_IVA_Fact.setEnabled(true);
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(this, "Añade un producto a la tabla o selecciona una fila para borrar");
                e.printStackTrace();
            } finally{
                Pool.Cerrar();
        }
        }
    }//GEN-LAST:event_btnBorrarProdFactActionPerformed

    private void btnAñadirProdFactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirProdFactActionPerformed
        try {          
            if(!txtIdCliente.getText().isEmpty() && !txtEmpleado.getText().isEmpty() && !txtN_Factura.getText().isEmpty() && 
               !txtStockFact.getText().isEmpty() && Integer.parseInt(txtStockFact.getText().trim())>0 
                    && Integer.parseInt(txtStockFact.getText().trim())<=GestionProducto.getStockProducto((Producto)cmbProductoFact.getSelectedItem())){
                if(GestionProducto.ComprobarNombreTBL(model_ProductosFacturar,cmbProductoFact.getSelectedItem().toString(),Integer.parseInt(txtStockFact.getText().trim())) == false){
                    GestionProducto.CargarFilaFacturaProd(model_ProductosFacturar, cmbProductoFact.getSelectedItem().toString(),Integer.parseInt(txtStockFact.getText().trim()),(Producto)cmbProductoFact.getSelectedItem());  
                    txtIdCliente.setEditable(false);txtEmpleado.setEditable(false);txtN_Factura.setEditable(false); chbCobrada.setEnabled(false);cmb_IVA_Fact.setEnabled(false);
                }
                float total = 0;
                for(int i=0;i<model_ProductosFacturar.getRowCount();i++){
                    total+=(float)model_ProductosFacturar.getValueAt(i, 2)+((float)model_ProductosFacturar.getValueAt(i, 2)*(Float.parseFloat(cmb_IVA_Fact.getSelectedItem().toString())/100));
                    lbl_Total.setText(String.format("%.2f", total)+"€");
                    }
            }
            else{
                JOptionPane.showMessageDialog(this, "Por favor rellene los campos superiores e ingrese una cantidad correcta de stock");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex);
        } finally{
            Pool.Cerrar();
        }
    }//GEN-LAST:event_btnAñadirProdFactActionPerformed

    private void cmbClienteConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClienteConsultaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbClienteConsultaActionPerformed

    private void btnFiltroClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltroClienteActionPerformed
        if(!cmbClienteConsulta.isVisible()){
        cmbClienteConsulta.setVisible(true);
        }else{cmbClienteConsulta.setVisible(false);}
    }//GEN-LAST:event_btnFiltroClienteActionPerformed

    private void txtFacturado30ConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFacturado30ConsultaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFacturado30ConsultaActionPerformed

    private void btn_BorrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BorrarClienteActionPerformed
        if(!txt_BorrarID_Cliente.getText().trim().isEmpty()){
        try {
            if(GestionCliente.ExisteCliente(txt_BorrarID_Cliente.getText().trim()) == true){
                if(GestionCliente.ComprobarCobradasID_Cliente(txt_BorrarID_Cliente.getText().trim()) == true){
                    GestionCliente.Cliente_a_Historico(txt_BorrarID_Cliente.getText().trim());
                    GestionFactura.Factura_a_Historico(txt_BorrarID_Cliente.getText().trim());
                    GestionFactura.BorradoDetalle(txt_BorrarID_Cliente.getText().trim());
                    GestionFactura.BorradoFacturas(txt_BorrarID_Cliente.getText().trim());
                    GestionCliente.BorradoCliente(txt_BorrarID_Cliente.getText().trim());
                    Pool.getCurrentConexion().commit();
                    txtIdCliente.setText("");
                    //Refresca el combo de facturas
                    cmbBoxModelC = new DefaultComboBoxModel<>();
                    cmbCliente.setModel(cmbBoxModelC);
                    GestionCliente.cargarCombo(cmbCliente);
                    JOptionPane.showMessageDialog(this, "Cliente borrado satisfactoriamente");
                }
                else{                  
                    JOptionPane.showMessageDialog(this, "El cliente no puede borrarse debido a que tiene facturas pendientes");
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "El cliente no existe");
            }
            
        } catch (SQLException ex) {
            try {
                Pool.getCurrentConexion().rollback();
                Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex1) {
                Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex1);
            }
        } finally{
            Pool.Cerrar();
        }
        }
        else{
            JOptionPane.showMessageDialog(this, "Por favor rellene el campo ID Cliente");
        }
    }//GEN-LAST:event_btn_BorrarClienteActionPerformed

    private void btnFacturarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFacturarActionPerformed
        Savepoint save = null;
        if(!txtIdCliente.getText().isEmpty() && !txtEmpleado.getText().isEmpty() && !txtN_Factura.getText().isEmpty() && model_ProductosFacturar.getRowCount()>0){
            try {
                GestionEmpleado.AñadirOperativa(txtEmpleado.getText().trim());
                save = Pool.getCurrentConexion().setSavepoint();
                try {
                    GestionFactura.InsertarFactura(txtN_Factura.getText().trim(),txtIdCliente.getText().trim(),txtEmpleado.getText().trim(), chbCobrada.isSelected(),Double.parseDouble(cmb_IVA_Fact.getSelectedItem().toString()), model_ProductosFacturar);
                    GestionEmpleado.AñadirIncentivo(txtEmpleado.getText().trim(), Float.parseFloat(lbl_Total.getText().trim().replace(',', '.').substring(0, lbl_Total.getText().trim().length()-1)));
                    GestionProducto.ActualizarStock(model_ProductosFacturar,cmbProductoFact);
                    //Actualiza la tabla de productos de la otra ventana:
                    model_Productos.setRowCount(0);
                    GestionProducto.cargarTablaProducto(model_Productos);
                } catch (SQLException ex) {
                    Pool.getCurrentConexion().rollback(save);
                    Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex);
            } finally{
                try {
                    Pool.getCurrentConexion().commit();
                    Pool.Cerrar();
                } catch (SQLException ex) {
                    Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        }
        else{
            JOptionPane.showMessageDialog(this, "Rellene todos los campos necesarios de la factura");
        }
    }//GEN-LAST:event_btnFacturarActionPerformed

    private void txtIdClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdClienteFocusLost
        try {
            if(GestionCliente.ExisteCliente(txtIdCliente.getText().trim()) == false && !txtIdCliente.getText().trim().isEmpty()){
                Crear_Cliente.setVisible(true);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex);
        } finally{
            Pool.Cerrar();
        }
    }//GEN-LAST:event_txtIdClienteFocusLost

    private void btnNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoActionPerformed
        txtIdCliente.setText("");
        Crear_Cliente.setVisible(false);
    }//GEN-LAST:event_btnNoActionPerformed

    private void txtN_FacturaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtN_FacturaFocusLost
        try {
            if(GestionFactura.ExisteFactura(txtN_Factura.getText().trim()) == true){
                JOptionPane.showMessageDialog(this, "La factura ya existe");
                txtN_Factura.setText("");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex);
        } finally{
            Pool.Cerrar();
        }
    }//GEN-LAST:event_txtN_FacturaFocusLost

    private void txtEmpleadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmpleadoFocusLost
        try {
            if(GestionEmpleado.ExisteEmpleado(txtEmpleado.getText().trim()) == false && !txtEmpleado.getText().trim().isEmpty()){              
                JOptionPane.showMessageDialog(this, "No existe el empleado");
                txtEmpleado.setText("");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex);
        } finally{
            Pool.Cerrar();
        }
    }//GEN-LAST:event_txtEmpleadoFocusLost

    private void cmb_IVA_FactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_IVA_FactActionPerformed
        float total = 0;
        if(model_ProductosFacturar.getRowCount()>0){
        for(int i=0;i<model_ProductosFacturar.getRowCount();i++){
            total+=(float)model_ProductosFacturar.getValueAt(i, 2)+((float)model_ProductosFacturar.getValueAt(i, 2)*(Float.parseFloat(cmb_IVA_Fact.getSelectedItem().toString())/100));
            lbl_Total.setText(String.format("%.2f", total)+"€");
            }
        }
        else{
            lbl_Total.setText(0+"€");
        }
    }//GEN-LAST:event_cmb_IVA_FactActionPerformed

    private void btnSiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiActionPerformed
        Nuevo_Cliente.setVisible(rootPaneCheckingEnabled);
        nuevo_idcliente.setText(txtIdCliente.getText().trim());
        Crear_Cliente.dispose();
    }//GEN-LAST:event_btnSiActionPerformed

    private void btncancelarcliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelarcliActionPerformed
        Nuevo_Cliente.dispose();
        txtIdCliente.setText("");
    }//GEN-LAST:event_btncancelarcliActionPerformed

    private void btncrearcliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncrearcliActionPerformed
        try {
            if(!nuevo_idcliente.getText().trim().isEmpty() && !nuevo_nombre.getText().trim().isEmpty() && !nuevo_apellido.getText().trim().isEmpty() && !nuevo_direccion.getText().trim().isEmpty() && GestionCliente.ExisteCliente(nuevo_idcliente.getText().trim()) == false){             
                txtIdCliente.setText(nuevo_idcliente.getText().trim());
                GestionCliente.AñadirCliente(nuevo_idcliente.getText().trim(),nuevo_nombre.getText().trim(),nuevo_apellido.getText().trim(),nuevo_direccion.getText().trim());
                Pool.getCurrentConexion().commit();
                //Refresca el combo de facturas
                cmbBoxModelC = new DefaultComboBoxModel<>();
                cmbCliente.setModel(cmbBoxModelC);
                GestionCliente.cargarCombo(cmbCliente);
                //
                nuevo_nombre.setText("");nuevo_apellido.setText("");nuevo_direccion.setText("");
                Nuevo_Cliente.dispose();               
            }
            else{
                JOptionPane.showMessageDialog(this, "Rellene todos los campos");
            }
        } catch (SQLException ex) {
            try {
                Pool.getCurrentConexion().rollback();
                Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex1) {
                Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex1);
            }
        } finally{
            Pool.Cerrar();
        }
    }//GEN-LAST:event_btncrearcliActionPerformed

    private void nuevo_idclienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nuevo_idclienteFocusLost
        try {
            if(GestionCliente.ExisteCliente(nuevo_idcliente.getText().trim()) == true){
                nuevo_idcliente.setText("");
                JOptionPane.showMessageDialog(this, "El ID introducido ya existe");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Practica_App.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_nuevo_idclienteFocusLost

    private void btnConsulta30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsulta30ActionPerformed
        //txtFacturado30Consulta.setText(GestionFactura.GetFacturadoLast30());
    }//GEN-LAST:event_btnConsulta30ActionPerformed


    
    public class LimiteLongitudJTextField extends PlainDocument {

        //Método para establecer longitud de texto indicada
        private int longitud;

        public LimiteLongitudJTextField(int longitud) {
            super();
            this.longitud = longitud;
        }

        @Override
        public void insertString(int offset, String str, AttributeSet attr) throws BadLocationException {
            if (str == null) {
                return;
            }
            if ((getLength() + str.length()) <= longitud) {
                super.insertString(offset, str, attr);
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Practica_App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Practica_App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Practica_App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Practica_App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practica_App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Crear_Cliente;
    private javax.swing.JDialog Nuevo_Cliente;
    private javax.swing.JButton btnAñadir;
    private javax.swing.JButton btnAñadirProdFact;
    private javax.swing.JButton btnBorrarProd;
    private javax.swing.JButton btnBorrarProdFact;
    private javax.swing.JButton btnConsulta30;
    private javax.swing.JButton btnFacturar;
    private javax.swing.JButton btnFiltroCliente;
    private javax.swing.JButton btnModificarProd;
    private javax.swing.JButton btnNo;
    private javax.swing.JButton btnRestablecerTBLProd;
    private javax.swing.JButton btnSi;
    private javax.swing.JButton btn_BorrarCliente;
    private javax.swing.JButton btn_EstadoCobro;
    private javax.swing.JButton btncancelarcli;
    private javax.swing.JButton btncrearcli;
    private javax.swing.JCheckBox chbCobrada;
    private javax.swing.JComboBox<Cliente> cmbCliente;
    private javax.swing.JComboBox<Cliente> cmbClienteConsulta;
    private javax.swing.JComboBox<Producto> cmbProductoFact;
    private javax.swing.JComboBox<String> cmb_IVAProd;
    private javax.swing.JComboBox<String> cmb_IVA_Fact;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblCategoriaProd;
    private javax.swing.JLabel lblCobradaFact;
    private javax.swing.JLabel lblConsulta30;
    private javax.swing.JLabel lblExisteCliente;
    private javax.swing.JLabel lblFactConsulta;
    private javax.swing.JLabel lblFiltro;
    private javax.swing.JLabel lblNFactConsulta;
    private javax.swing.JLabel lblNFactura;
    private javax.swing.JLabel lblNombreProd;
    private javax.swing.JLabel lblPrecioProd;
    private javax.swing.JLabel lblProductoFact;
    private javax.swing.JLabel lblStockProd;
    private javax.swing.JLabel lblTotalFact;
    private javax.swing.JLabel lbl_BorrarClientes;
    private javax.swing.JLabel lbl_IDBorrarCliente;
    private javax.swing.JLabel lbl_IDClienteFact;
    private javax.swing.JLabel lbl_IDEmpleadoFact;
    private javax.swing.JLabel lbl_IDProd;
    private javax.swing.JLabel lbl_IVAFact;
    private javax.swing.JLabel lbl_IVAProd;
    private javax.swing.JLabel lbl_StockFact;
    private javax.swing.JLabel lbl_Total;
    private javax.swing.JTabbedPane menu;
    private javax.swing.JTextField nuevo_apellido;
    private javax.swing.JTextField nuevo_direccion;
    private javax.swing.JTextField nuevo_idcliente;
    private javax.swing.JTextField nuevo_nombre;
    private javax.swing.JPanel panelConsultas;
    private javax.swing.JPanel panelFacturar;
    private javax.swing.JPanel panelFacturas;
    private javax.swing.JPanel panelProductos;
    private javax.swing.JTable tblConsulta;
    private javax.swing.JTable tblFact_Cliente;
    private javax.swing.JTable tblFacturacionProd;
    private javax.swing.JTable tbl_Productos;
    private javax.swing.JTextField txtAñadir_IDProd;
    private javax.swing.JTextField txtAñadir_NombProd;
    private javax.swing.JTextField txtCategoriaP;
    private javax.swing.JTextField txtEmpleado;
    private javax.swing.JTextField txtFacturado30Consulta;
    private javax.swing.JTextField txtIdCliente;
    private javax.swing.JTextField txtN_Factura;
    private javax.swing.JTextField txtNumFactConsulta;
    private javax.swing.JTextField txtStockFact;
    private javax.swing.JTextField txt_AñadirPrecio;
    private javax.swing.JTextField txt_AñadirStock;
    private javax.swing.JTextField txt_BorrarID_Cliente;
    // End of variables declaration//GEN-END:variables
}
